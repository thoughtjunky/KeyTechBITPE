<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<!-- saved from url=(0029)http://www.helpandmanual.com/ -->
<head>
   <title>Disk test suite</title>
   <meta name="generator" content="Help &amp; Manual" />
   <meta name="keywords" content="Disk test suite,File size,Firewire,Memory card readers,Memory sticks,Pattern,Read (disk),Removable drives,Test Pattern,write(disk)" />
   <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
   <meta http-equiv="Content-Style-Type" content="text/css" />
   <link type="text/css" href="default.css" rel="stylesheet" />
<script type="text/javascript" src="helpman_topicinit.js"></script>
<!-- Redirect browser to frame page if page is not in the content frame. -->
<script type="text/javascript">
<!--
if (location.search.lastIndexOf("toc=0")<=0) {
  if (parent.frames.length==0) { parent.location.href="index.html?tests_disk.htm"; }
  else { parent.quicksync('a6.6'); }
}
//-->
</script>
<script type="text/javascript" src="highlight.js"></script></head>
<body style="margin: 0px 0px 0px 0px; background: #FFFFFF;" onload="highlight();">
<div id="hmpopupDiv" style="visibility:hidden; position:absolute; z-index:1000; "></div>


<table width="100%" border="0" cellspacing="0" cellpadding="5" bgcolor="#649CCC">
  <tr valign="middle">
    <td align="left">
      <p class="p_Headingpage"><span class="f_Headingpage">Disk test (hard disk, floppy, flash drive) [DISK]</span></p>

    </td>
    <td align="right">
     <span style="font-size: 9pt">
     <a href="overview.htm"><img src="nav_up_blue.gif" border=0 alt="Top"></a>&nbsp;
     <a href="tests_maths.htm"><img src="nav_left_blue.gif" border=0 alt="Previous"></a>&nbsp;
     <a href="tests_emc.htm"><img src="nav_right_blue.gif" border=0 alt="Next"></a>
     </span>
    </td>
  </tr>
</table>


<!-- Placeholder for topic body. -->
<table width="100%" border="0" cellspacing="0" cellpadding="5"><tr valign="top"><td align="left">
<p style="margin: 0px 0px 8px 0px;">This suite contains a number of tests that exercise the mass storage units (hard disk or otherwise) connected to the computer. This test can be on the File System (e.g. NTFS disk volume C:) or in the case of BurnInTest Professional directly to the physical disk (e.g. physical disk 1, not using a file system like NTFS). The physical disk test is available on unformatted disks and formatted disks that do not contain Windows installations or paging files. On systems without an Operating System, i.e. when using Bootable BurnInTest or WinPE, only unformatted disks are supported for the physical disk test.</p>
<p style="margin: 0px 0px 8px 0px;">By default drive C: is used for the hard disk but this can be changed from the <a href="preferences_disk.htm">Preferences Dialog.</a> and up to 50 drives can be selected for simultaneous testing. From this 50 it is possible to select combinations of available floppy disks, hard disks and flash drives. Drives can be connected via the IDE bus, SATA, eSATA, SCSI, USB, Firewire or any other method supported by Windows.  </p>
<p style="margin: 0px 0px 8px 0px;"><span style="font-style: italic; font-weight: bold;">How the tests work</span></p>
<p style="margin: 0px 0px 8px 0px;">The user can select one of the following test modes or choose to automatically cycle between the patterns. This selection is done in the <a href="preferences_disk.htm">preferences window</a>. Possible test modes are,</p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 8px 24px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="24"><span style="font-size: 10pt; font-family: 'Arial Unicode MS', 'Lucida Sans Unicode', 'Arial'; color: #000000;">&#8226;</span></td><td>Default (Cyclic)</td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 8px 24px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="24"><span style="font-size: 10pt; font-family: 'Arial Unicode MS', 'Lucida Sans Unicode', 'Arial'; color: #000000;">&#8226;</span></td><td>Sequential data pattern (0,1,2...255)</td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 8px 24px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="24"><span style="font-size: 10pt; font-family: 'Arial Unicode MS', 'Lucida Sans Unicode', 'Arial'; color: #000000;">&#8226;</span></td><td>Random data with random seeking</td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 8px 24px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="24"><span style="font-size: 10pt; font-family: 'Arial Unicode MS', 'Lucida Sans Unicode', 'Arial'; color: #000000;">&#8226;</span></td><td>High Low frequency data overwrite (10101 then 00001)</td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 8px 24px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="24"><span style="font-size: 10pt; font-family: 'Arial Unicode MS', 'Lucida Sans Unicode', 'Arial'; color: #000000;">&#8226;</span></td><td>Butterfly seeking</td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 8px 24px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="24"><span style="font-size: 10pt; font-family: 'Arial Unicode MS', 'Lucida Sans Unicode', 'Arial'; color: #000000;">&#8226;</span></td><td>Binary data pattern 1 (10101010)</td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 8px 24px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="24"><span style="font-size: 10pt; font-family: 'Arial Unicode MS', 'Lucida Sans Unicode', 'Arial'; color: #000000;">&#8226;</span></td><td>Binary data pattern 2 (01010101)</td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 8px 24px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="24"><span style="font-size: 10pt; font-family: 'Arial Unicode MS', 'Lucida Sans Unicode', 'Arial'; color: #000000;">&#8226;</span></td><td>Zeros data pattern (00000000)</td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 8px 24px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="24"><span style="font-size: 10pt; font-family: 'Arial Unicode MS', 'Lucida Sans Unicode', 'Arial'; color: #000000;">&#8226;</span></td><td>Ones data pattern (11111111)</td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 8px 24px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="24"><span style="font-size: 10pt; font-family: 'Arial Unicode MS', 'Lucida Sans Unicode', 'Arial'; color: #000000;">&#8226;</span></td><td>Random data pattern</td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 8px 24px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="24"><span style="font-size: 10pt; font-family: 'Arial Unicode MS', 'Lucida Sans Unicode', 'Arial'; color: #000000;">&#8226;</span></td><td>Quick physical drive test (BurnInTest Professional only)</td></tr></table></div><p style="margin: 0px 0px 8px 0px;">During each test cycle (except Butterfly seeking and Quick physical drive test) a file is created and verified on the disk. </p>
<p style="margin: 0px 0px 8px 0px;"><span style="font-style: italic;">BurnInTest Professional specific</span></p>
<p style="margin: 0px 0px 8px 0px;">For the physical disk test there is no file system (e.g. NTFS) to write 'visible' files. As such BurnInTest will create 'virtual' files directly to the disk. This will destroy any data on the disk. The physical drive test in general will be much faster than the formatted drive test and provide better results.</p>
<p style="margin: 0px 0px 8px 0px;"><span style="font-style: italic;">BurnInTest Professional specific end</span></p>
<p style="margin: 0px 0px 8px 0px;">The size of the file is equal to a certain percentage of the disks capacity and all files are created in the root directory of the drives selected. The default file size is 1.0% of the disk size. For small capacity drives, like floppy disks, there is a minimum file size of 32KB. It is possible to change the default file size percentage from the preferences window.</p>
<p style="margin: 0px 0px 8px 0px;">Each test file is filled with a coded number sequence (a Pattern) that is used to verify the correct operation of the disk when the file is verified (read). Files are created in the free space on the disk until the disk is at least 94%* full (we’ll refer to this as the ‘full’ level). When the disk has reached this limit, all the test files are deleted and the test starts again. </p>
<p style="margin: 0px 0px 8px 0px;">(*) 94% is used on disks that have a swap file or a Windows directory. A limit of 94% is used to ensure that some space is kept for use by other applications (including the windows swap file). On disks that do not have a swap file or a Windows directory, between 99.5% and 100% of the disk will be used. </p>
<p style="margin: 0px 0px 8px 0px;"><span style="color: #000000;">&nbsp;</span></p>
<p style="margin: 0px 0px 8px 0px;">A number of test modes perform additional testing to that described above. These are described below:</p>
<p style="margin: 0px 0px 8px 0px;"><span style="color: #000000;">&nbsp;</span></p>
<p style="margin: 0px 0px 8px 0px;"><span style="font-style: italic;">Random data with Random seeking</span> consists of 2 repeating steps, (1) Writing, reading and verifying a test file with random data and (2) Seeking to random locations in the test files and reading or writing data blocks at this location.</p>
<p style="margin: 0px 0px 8px 0px;">(1) BurnInTest generates 7 unique blocks of random data for each disk under test (the block size is determined by the User preferences settings e.g. 16KB). BurnInTest sequentially writes a file using the first block of random data, followed by the second, third , forth, fifth, sixth and seventh and then the first etc, until the file size specified is reached (e.g. 0.1% of the disk size). After writing this test file with the random test data, the data is read sequentially and verified against the test data written. </p>
<p style="margin: 0px 0px 8px 0px;">(2) Following the writing and verifying of each file, the random seek part of the test starts. BurnInTest will select a test file at random (1..n, where n is the number of the test file that has already been written to disk). It will then select a random block within that test file (i.e. an offset into the file of, block number x block size, eg. 10 * 16KB = 160KB). BurnInTest will seek to this position in the test file and take an action. BurnInTest, at random, will either (i) read and verify a block at this position in the file or (ii) write a block at this position in the file. This process is repeated the number of times specified by the user in the disk preferences “seek count” field. </p>
<p style="margin: 0px 0px 8px 0px;">Steps (1) and (2) are repeated until the disk full level is reached. At this point, all the test files written to disk will be deleted and the process will be repeated.</p>
<p style="margin: 0px 0px 8px 0px;">The Random seeking mode is not supported when the Raw disk test mode is selected.</p>
<p style="margin: 0px 0px 8px 0px;"><span style="color: #000000;">&nbsp;</span></p>
<p style="margin: 0px 0px 8px 0px;"><span style="font-style: italic;">High Low frequency data overwrite</span> works by first writing a file with a high frequency pattern with each byte set to 0xAA (1010 1010 1010 1010...), then overwriting this with a low frequency pattern &nbsp;0x08 0x42 0x10 0x84 0x21 (1000 0100 0010 0001 0000 1000 0100 0010 0001) and then verifying that the low frequency pattern has been fully and correctly written. Note: This test pattern will write more data than it reads/verifies, this is the reason the MB Written and MB verified shown on the disk test window may not be equal. </p>
<p style="margin: 0px 0px 8px 0px;"><span style="color: #000000;">&nbsp;</span></p>
<p class="p_Heading1"><span style="font-style: italic;">Butterfly seeking</span> works by detecting the hard disk geometry (number of cylinders etc) and then seeking between cylinder 0 and cylinder X and back to cylinder 0. This is repeated the user specified ‘seek count’ times, before X is incremented by 1. This is repeated until the last cylinder on the Volume is reached. The number of operations reported refers to the number of combined Seek/Read operations. Note (1) that this test is only supported in Windows XP and above on non-Floppy, non-optical drives. (2) Performing a seek in many cases does not move the disk driver head, to ensure the disk drive head is moved to the seek position, a small read (of the Sector size) is done at each seek position. Also, incremental offsets of the sector size are used for the ‘X’ seek and the return to ‘0’ seek, to ensure that the disk drive cache is overflowed and physical disk seeks consistently occur (once the disk cache has overflowed). (3) Disk drive geometry may be faked or translated by hard disks/ device drivers and may not be the actual drive geometry. (4) The Cylinders, track and sector size used are typically logical values provided by the hard disk. &nbsp;(5) Up to 8 different physical extents per Volume (or Drive letter) are supported in the butterfly-seeking test. (6) As with other disk tests, if a physical disk is partitioned into multiple volumes (drives) and testing is simultaneously carried out on these volumes, the nature of the test will change. In the case of Butterfly seeking, the movement of the physical disk drive head will not reflect butterfly seeking, but something between butterfly seeking and random seeking, as the seeks for volume 1 go from its logical cylinder 0 to X and the seeks for volume 2 go from its logical cylinder 0 to Y are mixed in time. (7) Some disk drive device drivers do not support the supply of disk geometry information that is needed for this test. (8) The Raw disk test option does not support the Butterfly seeking test mode and will be skipped. Error reporting may be configured not to report “Butterfly seeking test not supported for this disk” errors. This can be achieved by editing the Error Classifications file (BITErrorClassifications.txt) for Error Number 160 to NONE. For example, changing the line from:</p>
<p style="margin: 0px 0px 8px 48px;">160,"Butterfly seeking test not supported for this disk",INFORMATION,</p>
<p style="margin: 0px 0px 8px 48px;">to</p>
<p style="margin: 0px 0px 8px 48px;">160,"Butterfly seeking test not supported for this disk",NONE,</p>
<p style="margin: 0px 0px 8px 0px;"><span style="color: #000000;">&nbsp;</span></p>
<p style="margin: 0px 0px 8px 0px;">The default setting is to cycle between the patterns. In this case a new pattern will be selected each time the disk has reached the BurnInTest ‘full’ level. Where the disk drive is a floppy, CD, DVD, or the operating system is Vista &nbsp;(and later) and the user is not running BurnInTest with 'elevated' administrator privileges, then Butterfly seeking will be skipped in the Cyclic testing and a log message reported. </p>
<p style="margin: 0px 0px 8px 0px;"><span style="color: #000000;">&nbsp;</span></p>
<p style="margin: 0px 0px 8px 0px;"><span style="font-style: italic;">BurnInTest Professional specific</span></p>
<p style="margin: 0px 0px 8px 0px;">The Quick physical drive test works by writing, reading and verifying virtual test files to the start of the disk, the end of the disk and a random selection in between. This provides for much quicker disk testing.</p>
<p style="margin: 0px 0px 8px 0px;"><span style="font-style: italic;">BurnInTest Professional specific end</span></p>
<p style="margin: 0px 0px 8px 0px;"><span style="color: #000000;">&nbsp;</span></p>
<p style="margin: 0px 0px 8px 0px;"><span style="font-style: italic; font-weight: bold;">Overview of settings</span></p>
<p style="margin: 0px 0px 8px 0px;">The user can chose to log SMART (Self-Monitoring Analysis and Reporting Technology) errors. To learn more about SMART, see section <a href="smart.htm">What is S.M.A.R.T?</a></p>
<p style="margin: 0px 0px 8px 0px;">Each of the following settings: Slow drive warning threshold, File size, Test pattern and the logging of SMART errors may be configured differently for each disk drive. The disk drive Duty Cycle setting will be used for all drives when the Duty Cycle Override entry is set blank (no value). If a different duty cycle is required for a particular disk drive, a value may be entered in the Duty Cycle Override entry.</p>
<p class="p_Heading1">The following settings can be configured differently for each drive: Slow drive warning threshold, File size, Test Pattern and Log SMART errors. To use the general disk drive Duty cycle for each disk just set the Duty Cycle override value to blank (no value), otherwise set the required value per disk. </p>
<p style="margin: 0px 0px 8px 0px;">If an error is detected in the coded number sequence then the error count is incremented. The numbers of bytes written and read from the disk are displayed in the test window. The addition of these two values is displayed in the main window.</p>
<p style="margin: 0px 0px 8px 0px;"><span style="font-style: italic; font-weight: bold;">Disk Self Test </span></p>
<p style="margin: 7px 0px 7px 0px;">The Disk Self Test (DST) is a set of built-in routines implemented by the vendor to perform failure diagnostics on the disk. The execution of the DST and the retrieval of the test results are defined by the ATA industry standard. Most drives that conform to this standard implements this set of built-in routines.</p>
<p style="margin: 7px 0px 7px 0px;">If the "SMART" option is selected for the disk test, then the DST is run before the standard BurnInTest disk test. If the "-f" command line parameter is also specified, then an extended disk self test is also run. If the DST is not supported by the disk, a message will be logged and the DST skipped. </p>
<p style="margin: 7px 0px 7px 0px;">Disclaimer: It has been observed that some drives that claim to support the Disk Self Test (DST) standard don't in fact fully support the specification. Some drives report the percentage progress incorrectly, and some drives report their status incorrectly. </p>
<p style="margin: 0px 0px 8px 0px;"><span style="font-style: italic; font-weight: bold;">Test window display</span></p>
<p style="margin: 0px 0px 8px 0px;">Graphical progress bars indicate if the test is currently writing or verifying (reading) information, the percentage complete for the particular file and the space remaining on the disk.</p>
<p style="margin: 0px 0px 8px 0px;">The speed of the hard disk and the duty cycle determine how quickly test files are created.</p>
<p style="margin: 0px 0px 8px 0px;"><span style="color: #000000;">&nbsp;</span></p>
<p style="margin: 0px 0px 8px 0px;"><span style="font-style: italic; font-weight: bold;">Notes</span></p>
<p style="margin: 0px 0px 8px 0px;">(1) When multiple copies of BurnInTest are used to test shared or networked drives at the same time, care must be taken to avoid file name collision on the drive being tested. File name collision will manifest itself as file creation errors. As the name of the test files created in the root directory of the disk being tested contains the drive letter, collisions can be avoided by assigning different drive letters to the network drive on each machine running BurnInTest.</p>
<p style="margin: 0px 0px 8px 0px;">(2) There are a few issues to aware of when interpreting the results of the disk test. These are covered in the <a href="precautions.htm">precautions section.</a></p>
<p style="text-align: justify; margin: 0px 0px 8px 0px;">(3) To test Firewire ports using BurnInTest it is recommended that an external hard disk via the Firewire port is used in conjunction with the BurnInTest disk test. (2) Similarly, to test external memory card readers/writers or other removable drives, it is recommended that the BurnInTest disk test is used.</p>

</td></tr></table>

</body>
</html>
