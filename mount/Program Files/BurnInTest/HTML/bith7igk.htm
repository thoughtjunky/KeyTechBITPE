<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Advanced Network Test;</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFFF" TEXT="#000000">

<OBJECT TYPE="application/x-oleobject" CLASSID="clsid:1e2a7bd0-dab9-11d0-b93a-00c04fc99f9e">
	<PARAM NAME="Keyword" VALUE="Advanced Network Test">
	<PARAM NAME="Keyword" VALUE="Network Test">
	<PARAM NAME="Keyword" VALUE="Advanced">
</OBJECT>

<H1><A NAME="hid_advnet"></A>Advanced Network Test </H1>

<P><I>(Applicable to BurnInTest Pro version only)</I></P>

<P><B><I>Overview</I></B></P>

<P>The Advanced Network test allows peer to peer testing of NICs and network connections using various different parameters and load settings. BurnInTest is capable of detecting the presence of remote machines on the same the network segment and setting connections between the unit under test (TU) and the remote machine in an automated fashion. BurnInTest will need to run on one system and the remote machines will need to run ‘End point’ (EP) software, that will allow peer to peer connections and testing to take place.</P>

<P>The connection topology will be M:N meaning that each NIC in each machine (both local and remote) can connect to multiple peers at the same time during testing in order to attempt to obtain the required load on the NIC.</P>

<P>To ensure compatibility between BurnInTest and the Endpoint software, it is important that you use the version of Endpoint that is included in the BurnInTest distribution you are using.</P>

<P><B><I>Test options</I></B></P>

<P>A configuration window to set the various test options is available from the “Network” tab in BurnInTest. </P>

<P>The options for each NIC will include;

<UL>
	<LI>Test ON / OFF<BR>
Turn testing on or off for the NIC in question.<BR><BR></LI>

	<LI>Data validation<BR>
If turned on, data sent and received will have a checksum. Turning on this option will increase CPU load (and possibly decrease throughput).<BR><BR></LI>

	<LI>Protocol : TCP, UDP, FTP, Cycle, Cycle (NO FTP).<BR>
Selecting Cycle will result in the test cycling between the TCP, UDP and FTP options.<BR><BR></LI>

	<LI>Mode (Half / Full Duplex).<BR>
In the half duplex case, data will only be sent from the TU to the EP.<BR><BR></LI>

	<LI>The option of using a random file transfer size with user configurable maximum size in MB of a fixed file size.  Note that in reality the ‘file’ will not actually be written to disk but will just be held in a RAM buffer.<BR><BR></LI>

	<LI>IP Port numbers to use.<BR>
There will be one IP port number used for broadcasting and another used for the actual test. Broadcasting is required to detect the presence of remote machines running the EP software.<BR><BR></LI>

	<LI>Log file update interval to write out current testing status.<BR><BR></LI>

	<LI>Transfer size for the data blocks being sent<BR><BR></LI>

	<LI>UDP % loss warning<BR>
The user can specify the percentage of UDP data loss before an error is flagged.<BR><BR></LI>

	<LI>Max % load on NIC<BR>
This is the target load for the NIC in question in the TU. </LI>
</UL>

<P>The data sent during the test will be pseudo randomly generated. A checksum will be added to the data to allow the remote machine to verify the data integrity (if the user has selected this option).</P>

<P>For more information see the description of the <A HREF="bith6xgz.htm">Advanced Network Test</A>.</P>

<P><B><I>Routing</I></B></P>

<P>At the start of testing, BurnInTest broadcasts a request and enumerates the EPs on the local LAN segment. The broadcast will use UDP and be directed at the universal 255.255.255.255 broadcast address.</P>

<P>Routing table entries will be set up on the test unit (TU) and EP to force traffic through the correct NICs at both ends, the new routes will need to be created without disturbing any exiting ones.</P>

<P><B><I>Load monitoring</I></B></P>

<P>BurnInTest and the EP monitor CPU and Network load in order to,

<OL>
	<LI>Know when additional EPs are required to achieve a requested load.<BR><BR></LI>

	<LI>Try and estimate when attempting to add a new EP (in order to achieve a requested load) will be counter productive due to a CPU throughput bottleneck.<BR><BR></LI>

	<LI>Try and estimate how much data should be sent to EPs already connected in order to achieve a requested load.</LI>
</OL>

<P>Load data is transferred from the EPs to BurnInTest in order to allow BurnInTest to manage which EPs are the best to connect to (the least loaded).</P>

<P><B><I>Logging</I></B></P>

<P>A log file can be generated for each network card being tested and saved in the directory specified in the “Logging” tab of BurnInTest. The log file name will conform to the following convention;</P>

<P>IP-date-time.txt <B>eg</B> 10.10.24.32-31may04-154919.txt</P>

<P>The log file will be written to during the testing process and contains the following:

<UL>
	<LI>type of protocol being used at moment;<BR><BR></LI>

	<LI>average throughput;<BR><BR></LI>

	<LI>start time and stop times;<BR><BR></LI>

	<LI>number of MB transferred back and forth during the test;<BR><BR></LI>

	<LI>any errors detected and details of those errors.</LI>
</UL>

<P>Errors will also be logged in the standard BurnInTest log files as specified in Preferences -&gt; Logging.</P>

<P><B><I>EP (End point) overview</I></B></P>

<P>EP is a standalone application that is started on a remote machine and will be able to run whether there is an instance of BurnInTest running or not. It will need to be able to access all available NICs of the machine that it is running on. It will register itself with the “Check Endpoint” (CE) application when started.  The registration will include the machine name the EP is running on and every available NIC.</P>

<P>An EP that has already registered with a CE, will re-register with that CE after the EP process restarts (such as a reboot), rather than waiting for the next CE polling interval. </P>

<P>EPs purpose is to detect requests from BurnInTest to start network testing and to send, receive and verify data from an instance of BurnInTest. </P>

<P>The EP will register itself with the machine running the Check EP application using UDP broadcasting, receiving an acknowledgment from the Check EP application when it has been registered. During this communication, the machine name will be passed to the EP for display. </P>

<P>Endpoints will de-register themselves with the Check EP application.</P>

<P>The “<U>Endpoint.exe</U>” software file is included in the BurnInTest installation directory and should be copied to the remote PC’s and run from these systems. For example they should be copied from the BurnInTest directory on the main PC, C:\Program Files\BurnInTest\Endpoint.exe, to each remote PC to a directory C:\Program Files\BurnInTest\Endpoint\Endpoint.exe. EP can be run by double clicking on the application file. </P>

<P>To use the advanced network test there must be at least 1 endpoint running on another machine on the network separate to the machine running BurnInTest. The test will dynamically connect to the EndPoint applications as needed.</P>

<P>To successfully run the test BurnInTest uses broadcasts to find all the available EndPoint applications on the network, so anything that may block the broadcasts, such as a router, needs to be taken into account. Firewalls could also interfere with the test and may need to be configured to allow BurnInTest and the EndPoint applications to use the network.</P>

<P>It should be noted that when there is more than one network card in the machine being tested the FTP option cannot lock to a specific network card in the same way that the UDP and TCP tests do.</P>

<P><B><I>Check Endpoint overview</I></B></P>

<P>This standalone application checks on a periodic basis (in minutes) that every EP that has registered itself with the CE is still running and functional. If an EP is found to be non-functional then an email will be sent to an email list of addresses that have been entered by the user. The email will contain the machine name and IP of the EP that is non-functional (only 1 IP from the EP will need to be reported). </P>

<P>Once a day, the CE will email a report to the email list. This will occur regardless of the current status of the EPs. The E-mail will list the registered EPs and their states. The user can select the time of day at which the report is generated.</P>

<P>Care will have to be taken to ensure the NIC is really non-functional and not just too busy to respond. 3 status states will be defined.</P>

<P>OKThe EP is registered and responded correctly to the last poll from the CE</P>

<P>SUSPECTThe EP failed to respond to the last poll from the CE</P>

<P>DISCONNECTEDThe EP failed to respond to at least two consecutive polls from the CE</P>

<P>A user can force a de-registration of an EP from the user interface of the Check EP application.</P>

<P>The “<U>CheckEnd.exe</U>” software file is included in the BurnInTest installation directory.</P>

</BODY>
</HTML>
